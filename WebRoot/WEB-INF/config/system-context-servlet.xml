<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-lazy-init="true">
	
	
    <mvc:resources location="/resources/" mapping="/resources/**"/>

	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="cacheSeconds" value="-1"/>
		<property name="basenames">
			<list>
				<value>/WEB-INF/languages/admin/messages</value>
			</list>
		</property>
	</bean>
	
	<!-- @spring mvc base setting -->
	<!--文件上传
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<bean id="multipartResolver" class="com.cbai.common.web.cos.CosMultipartResolver"/>
	-->
	<!-- @setting @ResponseBody return data format-->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">    
	    <property name="supportedMediaTypes">    
	        <list>    
	            <value>application/json;charset=UTF-8</value>    
	       </list>    
	    </property>  
	</bean> 
	
	<!--通过注解，把一个URL映射到Controller类的方法上-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> 
	    <property name="webBindingInitializer"><!--重写WebBindingInitializer-->
	        <bean class="com.cbai.common.web.springmvc.BindingInitializer"/>
	    </property>
	    
	    <property name="messageConverters">
            <list>
                 <ref bean="mappingJacksonHttpMessageConverter" /> 
            </list>
        </property>
	</bean>
	
	<!--DefaultAnnotationHandlerMapping-映射url到被RequestMapping注解的controller或者下面的方法-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"> 
	    <property name="interceptors">
	        <list>
	            <ref bean="systemLocaleInterceptor"/>
	            <ref bean="formTokenInterceptor"/>
	        </list>
	    </property> 
	</bean>
	
	
	<!--拦截器-->
	<bean id="formTokenInterceptor" class="com.cbai.common.web.springmvc.FormTokenInterceptor"/>
	<bean id="systemLocaleInterceptor" class="com.cbai.common.web.springmvc.SystemLocaleInterceptor"/>
	
	<!--  
	<bean id="adminContextInterceptor" class="com.cbai.website.common.web.AdminContextInterceptor">
		<property name="auth" value="true"/>
		<property name="loginUrl" value="/system/login.do"/>
		<property name="returnUrl" value="/system/home.do"/>
		<property name="excludeUrls">
			<list>
				<value>/login.do</value>
				<value>/logout.do</value>
			</list>
		</property>
	</bean>
	-->
	<!--基于Cookie的国际化实现方式 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"> 
	    <!-- 设置cookieName名称，可以根据名称通过js来修改设置，也可以像上面演示的那样修改设置，默认的名称为 类名+LOCALE（即：org.springframework.web.servlet.i18n.CookieLocaleResolver.LOCALE-->
	    <property name="cookieName" value="clientlanguage"/>
	    <!-- 设置最大有效时间，如果是-1，则不存储，浏览器关闭后即失效，默认为Integer.MAX_INT-->
	    <property name="cookieMaxAge" value="-1"/>
	    <!-- 设置cookie可见的地址，默认是“/”即对网站所有地址都是可见的，如果设为其它地址，则只有该地址或其后的地址才可见
        <property name="cookiePath" value="/"/>-->    
	</bean>
	
	<bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".jsp" />
    </bean> 
    
	<!--定义异常处理-->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	    <property name="exceptionMappings">
	        <props>
	            <prop key="org.springframework.web.bind.MissingServletRequestParameterException">/error/requiredParameter</prop>
	            <prop key="org.springframework.beans.TypeMismatchException">/error/mismatchParameter</prop>
	            <prop key="org.springframework.web.bind.ServletRequestBindingException">/error/bindException</prop>
	            <prop key="org.springframework.dao.DataIntegrityViolationException">/error/integrityViolation</prop>
	        </props>
	    </property>
	</bean> 
	
	<!--开启注解-->
	<!--
    @@@@@若采用springmvc自带的返回json的方法用此形式可实现@@@@@
	<mvc:annotation-driven />
	<context:component-scan base-package="com.cbai.developer.action" />
	-->
	<context:annotation-config/>

	<!--包含action-->
	<import resource="system-action-servlet.xml"/>
</beans>